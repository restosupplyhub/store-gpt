/* ------------------------------------------------------------------
   Resto Supply Hub • GPT Chatbot with Cached Catalog Injection
   ------------------------------------------------------------------ */
import express from "express";
import fetch from "node-fetch";
import cors from "cors";
import fs from "fs";

const PORT = process.env.PORT || 3000;
const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY;
const SHOPIFY_DOMAIN = process.env.SHOPIFY_DOMAIN; // restosupplyhub.myshopify.com

/* ---------- load catalog digest (generated by scripts/fetchCatalog.js) */
let catalog = [];
try {
    catalog = JSON.parse(fs.readFileSync("./catalog.json", "utf8"));
    console.log(`📦  Loaded ${catalog.length} products from catalog.json`);
} catch {
    console.warn("⚠️  catalog.json not found; searchCatalog will return empty.");
}

function searchCatalog(keyword) {
    const kw = keyword.toLowerCase();
    return catalog
        .filter(
            p =>
                p.title.toLowerCase().includes(kw) ||
                p.tags.some(t => t.toLowerCase().includes(kw))
        )
        .slice(0, 8) // keep prompt small
        .map(p => {
            const price = p.variants[0]?.price ?? "—";
            return `• ${p.title} – $${price} – https://${SHOPIFY_DOMAIN}/products/${p.handle}`;
        })
        .join("\n");
}

/* ------------------------- Express setup -------------------------- */
const app = express();
app.use(cors());
app.use(express.json());

app.post("/chat", async (req, res) => {
    try {
        const { message } = req.body;
        if (!message) return res.status(400).json({ error: "No message" });
        if (!OPENROUTER_API_KEY)
            return res.status(500).json({ error: "Missing OpenRouter key" });

        const keyword = message.split(/\s+/).slice(-3).join(" ");
        const miniCatalog = searchCatalog(keyword);

        const prompt = `
   You are a helpful assistant for customers of Resto Supply Hub (https://www.restosupplyhub.com).
   Use the catalog lines below if they help answer. If no match, answer normally.
   Matching products:
   ${miniCatalog || "— none matched —"}
   `;

        const aiRes = await fetch("https://openrouter.ai/api/v1/chat/completions", {
            method: "POST",
            headers: {
                Authorization: `Bearer ${OPENROUTER_API_KEY}`,
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                model: "meta-llama/llama-3-70b-instruct",
                messages: [
                    { role: "system", content: prompt },
                    { role: "user", content: message }
                ]
            })
        });

        const aiJson = await aiRes.json();
        const reply = aiJson?.choices?.[0]?.message?.content
            || "Sorry, I couldn’t get an answer right now.";
        res.json({ reply });

    } catch (err) {
        console.error("🔥 /chat error:", err);
        res.status(500).json({ error: "Server error", details: err.message });
    }
});

app.listen(PORT, () => console.log(`🚀 Chatbot API on :${PORT}`));
